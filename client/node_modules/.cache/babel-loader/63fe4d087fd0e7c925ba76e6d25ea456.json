{"ast":null,"code":"var _jsxFileName = \"/mnt/e0b587b1-3bde-497e-bc0a-17dffdca6182/Dev/ninalihome/src/components/layout/dropDown/DropDown.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport \"./dropDown.css\";\n\nconst DropDown = ({\n  title,\n  list\n}) => {\n  let initialState = {\n    listOpen: false,\n    headerTitle: title\n  };\n  const [state, setState] = useState(initialState);\n\n  const toggleList = () => {\n    setState(prevState => ({\n      listOpen: !prevState.listOpen,\n      headerTitle: title\n    }));\n  };\n\n  useEffect(ref => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const {\n    headerTitle,\n    listOpen\n  } = state;\n  const wrapperRef = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-wrapper\",\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-header\",\n    onClick: () => toggleList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-header-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, headerTitle), listOpen ? /*#__PURE__*/React.createElement(FontAwesome, {\n    name: \"angle-up\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(FontAwesome, {\n    name: \"angle-down\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), listOpen && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dd-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, list.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"dd-list-item\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, item.title))));\n};\n\nexport default DropDown;","map":{"version":3,"sources":["/mnt/e0b587b1-3bde-497e-bc0a-17dffdca6182/Dev/ninalihome/src/components/layout/dropDown/DropDown.jsx"],"names":["React","useState","useRef","useEffect","FontAwesome","DropDown","title","list","initialState","listOpen","headerTitle","state","setState","toggleList","prevState","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener","wrapperRef","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACpC,MAAIC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,KADO;AAEjBC,IAAAA,WAAW,EAAEJ;AAFI,GAAnB;AAKA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,YAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAAEE,SAAD,KAAgB;AACvBL,MAAAA,QAAQ,EAAE,CAACK,SAAS,CAACL,QADE;AAEvBC,MAAAA,WAAW,EAAEJ;AAFU,KAAhB,CAAD,CAAR;AAID,GALD;;AAOAH,EAAAA,SAAS,CAAEY,GAAD,IAAS;AACjB,aAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KALgB,CAMjB;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAZQ,EAYN,EAZM,CAAT;AAcA,QAAM;AAAEN,IAAAA,WAAF;AAAeD,IAAAA;AAAf,MAA4BE,KAAlC;AAEA,QAAMc,UAAU,GAAGvB,MAAM,CAAC,IAAD,CAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEuB,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAMZ,UAAU,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCH,WAAlC,CADF,EAEGD,QAAQ,gBACP,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,IAAI,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGP,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,EASGA,QAAQ,iBACP;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACmB,GAAL,CAAUC,IAAD,iBACR;AAAI,IAAA,SAAS,EAAC,cAAd;AAA6B,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACrB,KADR,CADD,CADH,CAVJ,CADF;AAqBD,CAtDD;;AAwDA,eAAeD,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport \"./dropDown.css\";\n\nconst DropDown = ({ title, list }) => {\n  let initialState = {\n    listOpen: false,\n    headerTitle: title,\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const toggleList = () => {\n    setState((prevState) => ({\n      listOpen: !prevState.listOpen,\n      headerTitle: title,\n    }));\n  };\n\n  useEffect((ref) => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const { headerTitle, listOpen } = state;\n\n  const wrapperRef = useRef(null);\n\n  return (\n    <div className=\"dd-wrapper\" ref={wrapperRef}>\n      <div className=\"dd-header\" onClick={() => toggleList()}>\n        <div className=\"dd-header-title\">{headerTitle}</div>\n        {listOpen ? (\n          <FontAwesome name=\"angle-up\" size=\"lg\" />\n        ) : (\n          <FontAwesome name=\"angle-down\" size=\"lg\" />\n        )}\n      </div>\n      {listOpen && (\n        <ul className=\"dd-list\">\n          {list.map((item) => (\n            <li className=\"dd-list-item\" key={item.id}>\n              {item.title}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}